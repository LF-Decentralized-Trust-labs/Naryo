broadcaster.type=RABBIT
rabbitmq.exchange=ThisIsAExchange
rabbitmq.routingKeyPrefix=thisIsRoutingKey
rabbitmq.blockNotification=true
rabbitmq.routingKey.contractEvents=contractEvents
rabbitmq.routingKey.blockEvents=blockEvents
rabbitmq.routingKey.transactionEvents=transactionEvents
rabbitmq.routingKey.messageEvents=messageEvents

spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/


eventStore.type = DB
broadcaster.event.confirmation.numBlocksToWait=0
broadcaster.event.confirmation.numBlocksToWaitForMissingTx=100

ethereum.nodes[0].pollingInterval = 500

# LOGGING
logging.level.org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer=OFF
logging.level.org.apache.kafka.clients.NetworkClient=error
spring.devtools.restart.log-condition-evaluation-delta=false

spring.mongodb.embedded.version=3.5.5

management.endpoint.metrics.enabled=false

ethereum.nodes[0].name=default
ethereum.nodes[0].url=http://localhost:8545
ethereum.nodes[0].blockStrategy=POLL
ethereum.nodes[0].syncingThreshold=100
ethereum.nodes[0].healthcheckInterval=5000
ethereum.nodes[0].maxBlocksToSync=0
ethereum.healthcheck.pollInterval=5000
ethereum.blockStrategy=POLL
ethereum.numBlocksToReplay=12
ethereum.sync.batchSize=100000

eventStore.url=http://localhost:8081/api/rest/v1
eventStore.eventPath=/event
eventStore.latestBlockPath=/latestblock

database.type=MONGO

broadcaster.cache.expirationMillis=6000000
broadcaster.event.confirmation.numBlocksToWaitBeforeInvalidating=2
broadcaster.multiInstance=false
broadcaster.enableBlockNotifications=true
