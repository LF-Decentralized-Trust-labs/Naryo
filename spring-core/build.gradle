plugins {
    id 'java-library'
    id 'io.freefair.lombok'
    id 'org.springframework.boot'
    id 'com.gradle.plugin-publish'
    id 'io.spring.dependency-management'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    okHttpVersion = '4.12.0'
    jacksonVersion = '2.17.1'
    web3jVersion = '4.12.0'
}

dependencies {
    implementation project(':core')
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "org.web3j:core:$web3jVersion"
    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'jakarta.validation:jakarta.validation-api'


    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test', Test) {
    useJUnitPlatform()
    maxHeapSize = '1G'

    doFirst {
        def bbAgent = configurations.testRuntimeClasspath
                .find { it.name.startsWith('byte-buddy-agent') }
        if (bbAgent) {
            jvmArgs += [
                "-javaagent:${bbAgent.absolutePath}"
            ]
            jvmArgs += [
                "-XX:+EnableDynamicAgentLoading"
            ]
        } else {
            logger.warn("⚠️  byte-buddy-agent JAR not found on testRuntimeClasspath; inline mock-maker may break on future JDKs.")
        }
    }

    testLogging {
        events "passed"
    }
}

tasks.named('bootJar') { enabled = false }

tasks.named("spotlessJava").configure {
    dependsOn("spotlessGroovyGradle", "compileJava", "compileTestJava", "javadoc")
}
