plugins {
    id 'java-library'
    id 'io.freefair.lombok'
    id 'maven-publish'
    alias(libs.plugins.boot)
    alias(libs.plugins.dependencyManagement)
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {

    implementation(project(':core'))

    implementation(libs.springBootStarter)

    implementation(libs.web3jCore)
    implementation(libs.okhttp)
    implementation(libs.jacksonDatabind)

    implementation(libs.hibernateValidator)
    implementation(libs.jakartaValidationApi)

    compileOnly(libs.lombok)
    annotationProcessor(libs.lombok)
    annotationProcessor(libs.springBootStarter)

    testImplementation(libs.springBootStarterTest)
    testRuntimeOnly(libs.junitPlatformLauncher)
}

tasks.named('test', Test) {
    useJUnitPlatform()
    maxHeapSize = '1G'

    doFirst {
        def bbAgent = configurations.testRuntimeClasspath
                .find { it.name.startsWith('byte-buddy-agent') }
        if (bbAgent) {
            jvmArgs += [
                "-javaagent:${bbAgent.absolutePath}"
            ]
            jvmArgs += [
                "-XX:+EnableDynamicAgentLoading"
            ]
        } else {
            logger.warn("⚠️ byte-buddy-agent JAR not found on testRuntimeClasspath; inline mock-maker may break on future JDKs.")
        }
    }

    testLogging {
        events "passed"
    }
}

tasks.named('bootJar') { enabled = false }

tasks.named("spotlessJava").configure {
    dependsOn("spotlessGroovyGradle", "compileJava", "compileTestJava", "javadoc")
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
